name: Flutter Builds

on:
  push:
    branches: [ "builds/android_build" ]
  pull_request:
    branches: [ "builds/android_build" ]
env:
  PROPERTIES_PATH: "./android/key.properties"

jobs: #here we specify the jobs - We could have multiple jobs
  build_android_apk: #name it something meaningful
    runs-on: macos-latest   #runner: select a machine to use

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Sign keystore
        run: |
          echo keyPassword=\${{ secrets.KEYSTORE_KEY_PASSWORD }} > ${{env.PROPERTIES_PATH}}
          echo storePassword=\${{ secrets.KEYSTORE_PASSWORD }} >> ${{env.PROPERTIES_PATH}}
          echo keyAlias=\${{ secrets.KEYSTORE_KEY_ALIAS }} >> ${{env.PROPERTIES_PATH}} 

      - name: Create the keystore
        run: echo "${{ secrets.KEYSTORE_FILE_BASE64 }}" | base64 --decode > android/app/key.jks

      - name: Install dependencies
        run: flutter pub get

      - name: Build android apk
        run: flutter build apk --flavor dev -t lib/main_dev.dart --release --no-tree-shake-icons

      - name: Upload artifact Android APK
        uses: actions/upload-artifact@v1
        with:
          name: release-apk-signed
          path: build/app/outputs/flutter-apk/app-dev-release.apk


      - uses: actions/checkout@v2
      - name: Distribute to Firebase App Distribution
        uses: nickwph/firebase-app-distribution-action@v1
        with:
          app: ${{secrets.APP_ID}}
          serviceCredentialsFileContent: ${{secrets.CREDENTIAL_FILE_CONTENT}}
          groups: group_one
          file: build/app/outputs/flutter-apk/app-dev-release.apk

      #      - name: Sign App Bundle
#        uses: r0adkll/sign-android-release@v1
#        id: sign_app
#        with:
#          releaseDirectory: build/app/outputs/flutter-apk/
#          signingKeyBase64: ${{ secrets.KEYSTORE_FILE_BASE64 }}
#          alias: ${{ secrets.KEYSTORE_KEY_ALIAS }}
#          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
#          keyPassword: ${{ secrets.KEYSTORE_KEY_PASSWORD }}

#      - name: Sign Android App APK
#        run: jarsigner -keystore $RUNNER_TEMP/my_production.keystore -storepass ${{ secrets.KEYSTORE_PASSWORD }} -keypass ${{ secrets.KEYSTORE_KEY_PASSWORD }} -sigalg SHA256withRSA -digestalg SHA-256 -signedjar build/app/outputs/flutter-apk/app-dev-release.apk build/app/outputs/flutter-apk/app-dev-release.apk djudjo


      #      - name: Decode google-services.json
      #        env:
      #          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
      #        run: echo "$GOOGLE_SERVICES_JSON" > android/app/google-services.json

      #      - name: Sign Android App Bundle
      #        run: jarsigner -keystore $RUNNER_TEMP/my_production.keystore -storepass ${{ secrets.KEYSTORE_PASSWORD }} -keypass ${{ secrets.KEYSTORE_KEY_PASSWORD }} -sigalg SHA256withRSA -digestalg SHA-256 -signedjar build/app/outputs/bundle/release/app-release-signed.aab build/app/outputs/bundle/release/*.aab djudjo

      #      - name: Publish Android aab
      #        uses: actions/upload-artifact@v1
      #        with:
      #          name: release-aab-signed
      #          path: build/app/outputs/bundle/release/app-release-signed.aab